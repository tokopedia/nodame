var toml        = require('toml');
var json        = require('nodame/json')
var parse       = toml.parse;
var object      = {}

var __parseVar  = function (obj, str) {
    var re      = /\{{2} *[a-z0-9._]+ *\}{2}/gi;
    var found   = str.match(re);

    if (found) {
        for (var i in found) {
            var search  = found[i];
            var params  = search.match(/[a-z0-9._]+/i);

            if (params) {
                params  = params[0];
            } else {
                return str;
            }

            var replace = json.read(object, params);
            str         = str.replace(search, replace);
        }
    }

    return str;
};

var __parseFunc = function (str) {
    var re      = /(\(.+\|[a-z_]+\))/gi;
    var found   = str.match(re);

    if (found) {
        for (var i in found) {
            var search  = found[i];
            var vars    = search.replace(/[()]+/g, '').split('|');

            if (vars[1] === 'url_encode') {
                var replace = encodeURIComponent(vars[0]);
                str  = str.replace(search, replace);
            }
        }
    }

    return str;
};

toml.parseVar = function (obj, path) {
    path = path || [];

    if (typeof(obj) === 'object') {
        for (var i in obj) {
            if (typeof(obj[i]) === 'string') {
                obj[i] = __parseVar(obj, obj[i]);
                obj[i] = __parseFunc(obj[i]);
            } else {
                var __path = path.slice();
                __path.push(i);
                toml.parseVar(obj[i], __path);
            }
        }
    }
};

toml.parse = function (path) {
    object = parse(path);
    return object;
};

module.exports = toml;
